{"version":3,"sources":["Header.tsx","App.tsx","StyledApp.tsx","index.tsx"],"names":["getBannersData","oneLineHeaderData","className","headerText","twoLineHeaderData","replace","Promise","all","map","text","font","resolve","reject","lowerCaseText","toLowerCase","figlet","err","bannerText","getBannerText","then","Banner","lines","split","numColumns","length","underline","Array","fill","join","role","aria-level","aria-label","Header","props","state","banners","setBanners","bind","this","setState","catch","console","error","classnames","key","React","Component","StyledHeader","styled","Layout","children","StyledIcon","iconClassName","App","linkElements","handlePrefix","handle","urlBase","title","href","rel","getLinks","StyledApp","tinycolor","toHex","brighten","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abf74e73.chunk.js","sourcesContent":["import React from 'react';\nimport figlet from 'figlet';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst fontName = 'Calvin S';\nconst headerText = 'Armand Adroher';\n\ntype getBannerText = (args: {\n  text: string;\n  font?: figlet.Fonts;\n}) => Promise<string>;\nconst getBannerText: getBannerText = ({ text, font }) =>\n  new Promise((resolve: Function, reject: Function) => {\n    const lowerCaseText = text.toLowerCase();\n    figlet(lowerCaseText, { font }, (err, bannerText) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(bannerText);\n      }\n    });\n  });\n\ninterface BannerData {\n  className?: string;\n  bannerText?: string;\n}\n\ntype getBannersData = () => Promise<BannerData[]>;\nconst getBannersData = () => {\n  const oneLineHeaderData = {\n    className: 'desktop',\n    headerText,\n  };\n  const twoLineHeaderData = {\n    className: 'mobile',\n    headerText: headerText.replace(' ', '\\n'),\n  };\n  return Promise.all(\n    [oneLineHeaderData, twoLineHeaderData].map(({ className, headerText }) =>\n      getBannerText({ text: headerText, font: fontName }).then(bannerText => ({\n        className,\n        bannerText,\n      })),\n    ),\n  );\n};\n\ntype Banner = React.FunctionComponent<{\n  key?: string;\n  className?: string;\n  text?: string;\n}>;\n\nconst Banner: Banner = ({ className, text }) => {\n  const lines = (text || '').split('\\n');\n  const [firstLine] = lines;\n  const numColumns = firstLine.length;\n  const underline = new Array(numColumns).fill('=').join('');\n  return (\n    <pre\n      className={className}\n      role=\"heading\"\n      aria-level={1}\n      aria-label={headerText}\n    >\n      {text}\n      <br />\n      {underline}\n    </pre>\n  );\n};\n\ninterface HeaderProps {\n  fontName?: string;\n  className?: string;\n}\n\nclass Header extends React.Component<HeaderProps> {\n  state: {\n    banners: BannerData[];\n  };\n\n  constructor(props: HeaderProps) {\n    super(props);\n    this.state = { banners: [] };\n    this.setBanners = this.setBanners.bind(this);\n  }\n\n  componentDidMount() {\n    this.setBanners();\n  }\n\n  setBanners() {\n    getBannersData()\n      .then(banners => {\n        this.setState({ banners });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  render() {\n    const { className } = this.props;\n    const { banners } = this.state;\n\n    return (\n      <div className={classnames('header', className)}>\n        {banners.map(({ className, bannerText }) => (\n          <Banner\n            key={bannerText}\n            className={classnames(className, 'banner')}\n            text={bannerText}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst StyledHeader = styled(Header)`\n  font-weight: 900;\n\n  .banner {\n    line-height: 1;\n  }\n\n  .desktop {\n    display: block;\n  }\n  .mobile {\n    display: none;\n  }\n\n  @media (max-width: 27rem) {\n    .desktop {\n      display: none;\n    }\n\n    .mobile {\n      display: block;\n    }\n  }\n`;\n\nexport default StyledHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport '@fortawesome/fontawesome-free/css/brands.css';\n\nimport './assets/fira.css';\nimport Header from './Header';\n\ninterface LayoutProps {\n  className?: string;\n  children?: React.ReactElement<any>[];\n}\ntype Layout = React.FunctionComponent<LayoutProps>;\nconst Layout: Layout = ({ className, children }) => (\n  <div className={classnames('main-container', className)}>{children}</div>\n);\n\ninterface IconProps {\n  iconClassName: string;\n  className?: string;\n}\ntype Icon = React.FunctionComponent<IconProps>;\nconst Icon: Icon = ({ iconClassName, className }) => (\n  <i className={classnames('fab', iconClassName, className)} />\n);\n\nconst StyledIcon = styled(Icon)`\n  /* font-size: 100%; */\n  margin-right: 0.6rem;\n  min-width: 1rem;\n  text-align: center;\n`;\n\nconst getLinks = () => {\n  const links = [\n    ['fa-twitter', '@', 'aadroher', 'twitter.com', 'Twitter'],\n    ['fa-github-alt', '', 'aadroher', 'github.com', 'Github'],\n    ['fa-facebook-f', '/', 'aadroher', 'www.facebook.com', 'Facebook'],\n    ['fa-linkedin-in', '', 'armandadroher', 'www.linkedin.com/in', 'LinkedIn'],\n  ];\n\n  const linkElements = links.map(\n    ([iconClassName, handlePrefix, handle, urlBase, title]) => (\n      <li key={`${urlBase}/${handle}`}>\n        <a\n          href={`https://${urlBase}/${handle}`}\n          rel=\"external\"\n          aria-label={`${title} profile`}\n        >\n          <StyledIcon iconClassName={iconClassName} />\n          {`${handlePrefix}${handle}`}\n        </a>\n      </li>\n    ),\n  );\n\n  return <ul>{linkElements}</ul>;\n};\n\ntype App = React.FunctionComponent<{\n  className?: string;\n}>;\nconst App: App = ({ className }) => (\n  <div className={classnames('app', className)}>\n    <Layout>\n      <Header />\n      {getLinks()}\n    </Layout>\n  </div>\n);\n\nexport default App;\n","import styled from 'styled-components';\nimport tinycolor from 'tinycolor2';\nimport App from './App';\n\nconst fontColour = 'violet';\nconst shadowBrighteningPercentage = 10;\nconst shadowRadius = 0.3; // in rem.\n\nconst StyledApp = styled(App)`\n  padding: 8px;\n  background-color: #0f0f0f;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n\n  font-family: 'Fira Mono';\n  font-size: 16px;\n  color: #${tinycolor(fontColour).toHex()};\n  text-shadow: #${tinycolor(fontColour)\n      .brighten(shadowBrighteningPercentage)\n      .toHex()} 0 0 ${shadowRadius}rem;\n\n  a {\n    color: inherit;\n    animation: inherit;\n  }\n\n  & > .main-container {\n    width: 30rem;\n    @media (max-width: 27rem) {\n      width: 15rem;\n    }\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    top: 40%;\n    transform: translateY(-50%);\n\n    padding: 2rem;\n\n    ul {\n      li {\n        list-style-type: none;\n        a {\n          text-decoration: none;\n          &:hover {\n            text-decoration: underline;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default StyledApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StyledApp from './StyledApp';\n\nReactDOM.render(<StyledApp />, document.getElementById('root'));\n"],"sourceRoot":""}